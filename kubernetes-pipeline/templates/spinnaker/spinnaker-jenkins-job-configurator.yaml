# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: batch/v1
kind: Job
metadata:
  name: {{.Release.Name}}-spinnaker-jenkins-job-configurator
spec:
  template:
    spec:
      initContainers:
      - name: init-jenkins
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of Jenkins"; while ! nc -z jenkins-service.{{ .Release.Namespace }}.svc.cluster.local 8080; do sleep 1; printf "-"; done; echo -e "  >> Jenkins has started";']
      containers:
      - name: spin-jenkins-job-configurator
        image: appropriate/curl
        command: ["/bin/sh"]
        args: ["-c", "sh /spinnaker/run.sh"]
        env:
        - name: JENKINS_HOST
          value: "http://jenkins-service.{{ .Release.Namespace }}.svc.cluster.local:8080"
        - name: JENKINS_USERNAME
          value: "{{ .Values.jenkins.username }}"
        - name: JENKINS_PASSWORD
          value: "{{ .Values.jenkins.password }}"
        - name: JOB_NAME
          value: "job"
        volumeMounts:
        - name: spinnaker-jenkins-job-conf
          mountPath: /spinnaker
      restartPolicy: Never
      volumes:
      - name: spinnaker-jenkins-job-conf
        configMap:
          name: spinnaker-jenkins-job-conf

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: spinnaker-jenkins-job-conf
data:
  {{- $file := .Files }}
  {{- range $path, $byte := .Files.Glob "confs/jenkins/spinnaker-job/*" }}
  {{- $list := $path | splitList "/"}}
  {{- $length := len $list }}
  {{- $last := add $length -1 }}
  {{ index $list $last }}: |-
    {{- range $file.Lines $path }}
      {{ . }}
    {{- end }}
  {{- end }}
